{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./markdown-template.js"],"names":["ListLink","props","style","float","marginRight","textDecoration","color","to","children","Header","siteTitle","marginBottom","margin","maxWidth","padding","listStyle","defaultProps","Layout","data","useStaticQuery","site","siteMetadata","title","marginTop","post","markdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html","query"],"mappings":"yJAIMA,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,MAAM,OAASC,YAAY,SACtC,kBAAC,IAAD,CAAMF,MAAO,CAACG,eAAe,OAAOC,MAAM,SAAUC,GAAIN,EAAMM,IAAKN,EAAMO,YAIvEC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BAAQR,MAAO,CAACS,aAAa,YAC3B,yBAAKT,MAAO,CAACU,OAAO,SAAUC,SAAU,IAAIC,QAAQ,sBAClD,wBAAIZ,MAAO,CAAEU,OAAQ,IACnB,kBAAC,IAAD,CAAML,GAAG,IAAIL,MAAO,CAACI,MAAM,QAASD,eAAe,SAChDK,IAGL,wBAAIR,MAAO,CAAEa,UAAU,OAASZ,MAAM,UACpC,kBAAC,EAAD,CAAUI,GAAG,KAAb,QACA,kBAAC,EAAD,CAAUA,GAAG,WAAb,SACA,kBAAC,EAAD,CAAUA,GAAG,aAAb,eAURE,EAAOO,aAAe,CACpBN,UAAU,IAGGD,Q,UCOAQ,IA3BA,SAAC,GAAkB,IAAD,EAAfT,EAAe,EAAfA,SACVU,EAAOC,YAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQT,WAAW,UAAAQ,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,yBAAKpB,MAAO,CAACU,OAAO,SAAWC,SAAU,IAAKC,QAAQ,wBACpD,8BAAON,GACP,4BAAQN,MAAO,CAACqB,UAAU,c,kCC/BlC,kFAIe,sBAAe,IACtBC,EADqB,EAAXN,KACEO,eAClB,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKD,EAAKE,YAAYJ,OACtB,yBAAKK,wBAAyB,CAAEC,OAAQJ,EAAKK,WAM9C,IAAMC,EAAK","file":"component---markdown-template-js-946e465ec2bc1cca0999.js","sourcesContent":["import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst ListLink = props => (\r\n  <li style={{ float: `left`, marginRight: `1rem` }}>\r\n    <Link style={{textDecoration:'none',color:'black'}} to={props.to}>{props.children}</Link>\r\n  </li>\r\n)\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header style={{marginBottom: `1.45rem`,}}>\r\n    <div style={{margin: `0 auto`,maxWidth: 960,padding: `1.45rem 1.0875rem`,}}>\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link to=\"/\" style={{color: `black`,textDecoration: `none`,}}>\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n      <ul style={{ listStyle: `none`, float: `right` }}>\r\n        <ListLink to=\"/\">Home</ListLink>\r\n        <ListLink to=\"/about/\">About</ListLink>\r\n        <ListLink to=\"/contact/\">Contact</ListLink>\r\n      </ul>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div style={{margin: `0 auto`, maxWidth: 960, padding: `0 1.0875rem 1.45rem`,}}>\r\n        <main>{children}</main>\r\n        <footer style={{marginTop: `2rem`}}>\r\n          </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"./src/components/layout\"\r\n\r\nexport default ({ data }) => {\r\n  const post = data.markdownRemark\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1>{post.frontmatter.title}</h1>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}