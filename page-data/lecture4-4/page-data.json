{"componentChunkName":"component---markdown-template-js","path":"/lecture4-4/","result":{"data":{"markdownRemark":{"html":"<h2>4-4. 계수 정렬</h2>\n<ul>\n<li>\n<p>특정한 조건이 부합할 때만 사용할 수 있지만 <span style='color:red'>매우 빠르게 동작하는</span> 정렬 알고리즘이다.</p>\n<ul>\n<li>계수 정렬은 <strong>데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때</strong>사용 가능하다.</li>\n</ul>\n</li>\n<li>데이터의 개수가 N, 데이터(양수) 중 최댓값이 K일 때 최악의 경우에도 수행시간 O(N+K)를 보장한다.</li>\n<li>동작 예시\n<img src=\"https://user-images.githubusercontent.com/71132893/103401336-c4d89e00-4b8b-11eb-9a2a-08bec4d375e8.png\" alt=\"image\">\n<img src=\"https://user-images.githubusercontent.com/71132893/103401375-e20d6c80-4b8b-11eb-843f-010ecea2c22b.png\" alt=\"image\">\n<img src=\"https://user-images.githubusercontent.com/71132893/103401379-e5a0f380-4b8b-11eb-9f0d-059dc60d5190.png\" alt=\"image\">\n<img src=\"https://user-images.githubusercontent.com/71132893/103401384-e9cd1100-4b8b-11eb-899f-7421c7e763ed.png\" alt=\"image\">\n<img src=\"https://user-images.githubusercontent.com/71132893/103401391-ee91c500-4b8b-11eb-8995-7ba0889d7ef4.png\" alt=\"image\">\n<img src=\"https://user-images.githubusercontent.com/71132893/103401414-08330c80-4b8c-11eb-97ab-3b822b212daf.png\" alt=\"image\"></li>\n<li>소스코드(python)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#모든 원소의 값이 0보다 크거나 같다고 가정</span>\narray<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#모든 범위를 포함하는 리스트 선언(모든 값은 0으로 초기화)</span>\ncount <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count<span class=\"token punctuation\">[</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token comment\">#각 데이터에 해당하는 인덱스의 값 증가</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#리스트에 기록된 정렬 정보 확인</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 띄어쓰기를 구분으로 등장한 횟수만큼 인덱스 출력</span>\n\n<span class=\"token comment\">#실행 결과 0 0 1 1 2 2 3 4 5 5 6 7 8 9 9</span></code></pre></div>\n<ul>\n<li>\n<p>복잡도 분석</p>\n<ul>\n<li>계수 정렬의 시간 복잡도와 공간 복잡도는 모두 O(N+K)이다.</li>\n<li>계수 정렬은 때에 따라서 심각한 비효율성을 초래할 수 있다.</li>\n<li>ex)데이터가 0과 999,999로 단 두 개만 존재하는 경우</li>\n<li>계수 정렬은 __동일한 값을 가지는 데이터가 여러 개 등장할 때 효과적으로 사용할 수 있다.</li>\n<li>성적의 경우 100점을 맞은 학생이 여러 명일 수 있기 때문에 계수 정렬이 효과적이다.</li>\n</ul>\n</li>\n</ul>\n<h3>정렬 알고리즘 비교하기</h3>\n<ul>\n<li>앞서 다룬 네 가지 정렬 알고리즘을 비교하면 다음과 같다.</li>\n<li>추가적으로 대부분의 프로그래밍 언어에서 지원하는 <u>표준 정렬 라이브러리는 최악의 경우에도 O(<em>NlogN</em>)을 보장</u>하도록 설계되어 있다.\n<img src=\"https://user-images.githubusercontent.com/71132893/103401736-76c49a00-4b8d-11eb-9bb3-e10343e2bc71.png\" alt=\"image\"></li>\n</ul>","frontmatter":{"title":"알고리즘 공부 기록/강의4-4","date":"31 December, 2020"}}},"pageContext":{"slug":"/lecture4-4/"}},"staticQueryHashes":[]}